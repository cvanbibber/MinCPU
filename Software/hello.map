
Discarded input sections

 .text          0x0000000000000000        0x0 start.o
 .data          0x0000000000000000        0x0 start.o
 .bss           0x0000000000000000        0x0 start.o
 .debug_line    0x0000000000000000       0xa4 start.o
 .debug_info    0x0000000000000000       0x26 start.o
 .debug_abbrev  0x0000000000000000       0x14 start.o
 .debug_aranges
                0x0000000000000000       0x20 start.o
 .debug_str     0x0000000000000000       0x4e start.o
 .text          0x0000000000000000        0x0 hello.o
 .data          0x0000000000000000        0x0 hello.o
 .bss           0x0000000000000000        0x0 hello.o
 .text.print_char
                0x0000000000000000        0xe hello.o
 .text.fibonacci
                0x0000000000000000       0x1e hello.o
 .debug_info    0x0000000000000000      0x58e hello.o
 .debug_abbrev  0x0000000000000000      0x213 hello.o
 .debug_loc     0x0000000000000000      0x283 hello.o
 .debug_aranges
                0x0000000000000000       0x40 hello.o
 .debug_ranges  0x0000000000000000      0x190 hello.o
 .debug_line    0x0000000000000000      0x7af hello.o
 .debug_str     0x0000000000000000      0x13f hello.o
 .comment       0x0000000000000000       0x31 hello.o
 .debug_frame   0x0000000000000000       0x7c hello.o

Memory Configuration

Name             Origin             Length             Attributes
IMEM             0x0000000000001000 0x0000000000002000 xr
DMEM             0x0000000000010000 0x0000000000002000 rw
STACK            0x0000000000011f00 0x0000000000000100 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD start.o
LOAD hello.o

.text           0x0000000000001000      0x208
 *(.text.start)
 .text.start    0x0000000000001000       0x54 start.o
                0x0000000000001000                _start
                0x0000000000001052                _exception_handler
 *(.text)
 *(.text.*)
 .text.print_string
                0x0000000000001054       0x1c hello.o
                0x0000000000001054                print_string
 .text.print_hex
                0x0000000000001070       0x66 hello.o
                0x0000000000001070                print_hex
 .text.startup.main
                0x00000000000010d6      0x132 hello.o
                0x00000000000010d6                main
                0x0000000000001208                . = ALIGN (0x4)
 *fill*         0x0000000000001208        0x0 

.rodata         0x0000000000001208       0xd0
 *(.rodata)
 .rodata        0x0000000000001208       0x10 hello.o
 *(.rodata.*)
 .rodata.print_hex.str1.4
                0x0000000000001218       0x15 hello.o
 *fill*         0x000000000000122d        0x3 
 .rodata.main.str1.4
                0x0000000000001230       0xa6 hello.o
                                         0xaa (size before relaxing)
                0x00000000000012d8                . = ALIGN (0x4)
 *fill*         0x00000000000012d6        0x2 

.rela.dyn       0x00000000000012d8        0x0
 .rela.text.start
                0x00000000000012d8        0x0 start.o

.data           0x0000000000010000        0x0 load address 0x00000000000012d8
                0x0000000000010000                _data_start = .
 *(.data)
 *(.data.*)
                0x0000000000010000                . = ALIGN (0x4)
                0x0000000000010000                _data_end = .

.bss            0x0000000000010000        0x0 load address 0x00000000000012d8
                0x0000000000010000                _bss_start = .
 *(.bss)
 *(.bss.*)
 *(COMMON)
                0x0000000000010000                . = ALIGN (0x4)
                0x0000000000010000                _bss_end = .

.stack          0x0000000000011f00      0x100
                0x0000000000011f00                . = ALIGN (0x4)
                0x0000000000011f00                _stack_bottom = .
                0x0000000000012000                . = (. + LENGTH (STACK))
 *fill*         0x0000000000011f00      0x100 
                0x0000000000012000                _stack_top = .

/DISCARD/
 *(.comment)
 *(.debug*)
                0x0000000000012000                PROVIDE (_sp = _stack_top)
                0x00000000000012d8                PROVIDE (_data_load_start = LOADADDR (.data))
                [!provide]                        PROVIDE (_data_load_end = (LOADADDR (.data) + SIZEOF (.data)))
OUTPUT(hello.elf elf32-littleriscv)

.riscv.attributes
                0x0000000000000000       0x26
 .riscv.attributes
                0x0000000000000000       0x24 start.o
 .riscv.attributes
                0x0000000000000024       0x26 hello.o
